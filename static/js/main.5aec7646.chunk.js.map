{"version":3,"sources":["ItemTray.tsx","DressUpGameColorButton.tsx","DressUpGameButton.tsx","DressUpGame.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ItemTray","props","state","isTrayOpen","inverse","this","headerClass","useSmallerHeader","className","onClick","setState","trayHeaderTitle","children","React","Component","colorList","ColorButtons","map","color","src","shapeUrls","outlineUrl","fillUrl","ShapeButtons","selectedShape","undefined","selectedColor","shapeUrl","onShapeSelect","hatImgs","shirtImgs","SelectedShape","shape","ClothingButtons","itemName","imgUrls","imgUrl","DressUpGameTryingStuff","storedState","window","localStorage","getItem","JSON","parse","favoriteInput","favorites","hatUrl","shirtUrl","favorite","name","console","log","url","style","width","height","type","value","onChange","e","target","saveFavorite","x","renderFavoriteListItem","setItem","stringify","clear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aec7646.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ItemTray.css'\r\n\r\ninterface ItemTrayProps {\r\n    trayHeaderTitle: string\r\n    useSmallerHeader?: boolean\r\n}\r\ninterface ItemTrayState {\r\n    isTrayOpen: boolean\r\n}\r\nexport class ItemTray extends React.Component<ItemTrayProps, ItemTrayState>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isTrayOpen: true,\r\n        }\r\n    }\r\n    render(): React.ReactNode {\r\n        var inverse = !this.state.isTrayOpen;\r\n\r\n        var headerClass = \"\";\r\n        if (this.props.useSmallerHeader) {\r\n            headerClass = \"smallerHeader\"\r\n\r\n        }\r\n        return (\r\n            <>\r\n                <h1 className={headerClass} onClick={() => this.setState({ isTrayOpen: inverse })}>\r\n                    {this.state.isTrayOpen ? \"-\" : \"+\"}{this.props.trayHeaderTitle}\r\n                </h1>\r\n                {this.state.isTrayOpen &&\r\n                    <>\r\n                        {this.props.children}\r\n                    </>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './DressUpGame.css'\r\nimport { ItemTray } from './ItemTray';\r\n\r\n\r\ninterface ColorButtonProps {\r\n    onClick: (color: string) => void,\r\n}\r\n\r\nconst colorList: string[] = [\r\n    \"purple\",\r\n    \"blue\",\r\n    \"green\",\r\n    \"yellow\",\r\n    \"red\",\r\n    \"white\"\r\n]\r\n\r\nexport class ColorButtons extends React.Component<ColorButtonProps, {}>{\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <>\r\n                <ItemTray trayHeaderTitle={\"Color\"} useSmallerHeader={true}>\r\n                    {colorList.map((color: string) => {\r\n                        return (\r\n                            <>\r\n                                <img\r\n                                    src={\"./imgTesting/colorWhite.png\"}\r\n                                    onClick={() => {\r\n                                        this.props.onClick(color)\r\n                                    }}\r\n                                    className={` ${color} clothesTrayImg`}\r\n                                />\r\n                            </>\r\n                        )\r\n                    })}\r\n                </ItemTray>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './DressUpGame.css'\r\nimport { ColorButtons } from './DressUpGameColorButton';\r\nimport { ItemTray } from './ItemTray';\r\n\r\nexport interface ShapeUrl {\r\n    outlineUrl: string\r\n    fillUrl: string\r\n}\r\n\r\nexport interface Shape extends ShapeUrl {\r\n    color: string\r\n}\r\n\r\nlet shapeUrls: ShapeUrl[] = [\r\n    { outlineUrl: './imgTesting/starLines.png', fillUrl: \"./imgTesting/starColorFadeTest.png\" },\r\n    { outlineUrl: './imgTesting/polygonLines.png', fillUrl: \"./imgTesting/polygonColor.png\" },\r\n];\r\n\r\ninterface ShapeButtonProps {\r\n    itemName: string,\r\n    onShapeSelect: (shape: Shape) => void\r\n}\r\ninterface ShapeButtonState {\r\n    selectedShape: ShapeUrl | undefined\r\n    selectedColor: string\r\n}\r\nexport class ShapeButtons extends React.Component<ShapeButtonProps, ShapeButtonState>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            selectedShape: undefined,\r\n            selectedColor: \"white\"\r\n        }\r\n    }\r\n    render(): React.ReactNode {\r\n        return (\r\n            <>\r\n                <ItemTray trayHeaderTitle={\"Shapes\"}>\r\n                    <>\r\n                        {shapeUrls.map((shapeUrl: ShapeUrl) => {\r\n                            return (\r\n                                <img\r\n                                    src={shapeUrl.outlineUrl}\r\n                                    className=\"clothesTrayImg\"\r\n                                    onClick={() => {\r\n                                        this.setState({ selectedShape: shapeUrl });\r\n                                        this.props.onShapeSelect({ ...shapeUrl, color: this.state.selectedColor })\r\n                                    }} />\r\n                            )\r\n                        })}\r\n                        <ColorButtons onClick={(color) => {\r\n                            this.setState({ selectedColor: color });\r\n                            if (this.state.selectedShape) {\r\n                                this.props.onShapeSelect({ ...this.state.selectedShape, color: color })\r\n                            }\r\n                        }} />\r\n\r\n                    </>\r\n                </ItemTray>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './DressUpGame.css'\r\nimport { ShapeButtons, Shape } from './DressUpGameButton';\r\n\r\nlet hatImgs = ['./Hats/hat1.png', './Hats/hat2.png', './Hats/hat1.png', './Hats/hat2.png',\r\n    './Hats/hat1.png', './Hats/hat2.png', './Hats/hat1.png', './Hats/hat2.png']\r\nlet shirtImgs = ['./Hats/shirt1.png', './Hats/shirt2.png', './Hats/shirt1.png', './Hats/shirt2.png',\r\n    './Hats/shirt1.png', './Hats/shirt2.png', './Hats/shirt1.png', './Hats/shirt2.png', './Hats/shirt1.png',\r\n    './Hats/shirt2.png', './Hats/shirt1.png', './Hats/shirt2.png', './Hats/shirt1.png', './Hats/shirt2.png']\r\n\r\n\r\nclass SelectedShape extends React.Component<{ shape: Shape }, {}> {\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div>\r\n                {/*<span style={{ border: \"1px solid black\" }}>{this.state.colorStyle}</span>\r\n                <span>{this.state.fillUrl}</span>*/}\r\n\r\n                <img src={this.props.shape.fillUrl} className={this.props.shape.color + \" smallImg star\"} />\r\n                <img src={this.props.shape.outlineUrl} className=\"smallImg star\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\ninterface ButtonProps {\r\n    itemName: string,\r\n    imgUrls: string[],\r\n    onClick: (imgUrl: string) => void\r\n}\r\ninterface ButtonState {\r\n    isTrayOpen: boolean\r\n}\r\nclass ClothingButtons extends React.Component<ButtonProps, ButtonState>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isTrayOpen: false\r\n        }\r\n    }\r\n    render(): React.ReactNode {\r\n        var inverse = !this.state.isTrayOpen;\r\n        // boolean ? \"if true\" : \"if false\"\r\n        return (\r\n            <>\r\n                <h1 onClick={() => this.setState({ isTrayOpen: inverse })}>\r\n                    {this.state.isTrayOpen ? \"-\" : \"+\"}{this.props.itemName}</h1>\r\n                {this.state.isTrayOpen && this.props.imgUrls.map((imgUrl: string) => {\r\n                    return (\r\n\r\n                        <img\r\n                            src={imgUrl}\r\n                            className=\"clothesTrayImg\"\r\n                            onClick={() => this.props.onClick(imgUrl)} />\r\n\r\n                    )\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ninterface Favorite {\r\n    hatUrl: string\r\n    shirtUrl: string\r\n    name: string\r\n}\r\n\r\ninterface DU1State {\r\n    hatUrl: string\r\n    shirtUrl: string\r\n    favoriteInput: string\r\n    favorites: Favorite[]\r\n\r\n    selectedShape: Shape | undefined\r\n}\r\nexport class DressUpGameTryingStuff extends React.Component<any, DU1State> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        var storedState = window.localStorage.getItem(\"state\");\r\n        if (storedState) {\r\n            this.state = JSON.parse(storedState);\r\n        } else {\r\n            this.state = {\r\n                favoriteInput: \"\",\r\n                favorites: [],\r\n                hatUrl: \"\",\r\n                shirtUrl: \"\",\r\n\r\n                selectedShape: undefined\r\n            }\r\n        }\r\n    }\r\n\r\n    renderFavoriteListItem(favorite: Favorite): React.ReactNode {\r\n        return (\r\n            <li onClick={() => this.setState({ hatUrl: favorite.hatUrl, shirtUrl: favorite.shirtUrl })}>\r\n                {favorite.name}\r\n            </li>);\r\n    }\r\n\r\n    saveFavorite(): void {\r\n        this.setState({\r\n            favoriteInput: \"\",\r\n            favorites: [...this.state.favorites,\r\n            {\r\n                name: this.state.favoriteInput,\r\n                hatUrl: this.state.hatUrl,\r\n                shirtUrl: this.state.shirtUrl\r\n            }]\r\n        })\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        console.log(this.state)\r\n        return (\r\n            <>\r\n                <div className='stage'>\r\n                    <div className=\"clothesTray\">\r\n                        <ClothingButtons itemName='Hats 5' imgUrls={hatImgs} onClick={(url) => this.setState({ hatUrl: url })} />\r\n                        <ClothingButtons itemName='Shirts' imgUrls={shirtImgs} onClick={(url) => this.setState({ shirtUrl: url })} />\r\n\r\n                        <ShapeButtons\r\n                            itemName='Shape'\r\n                            onShapeSelect={(shape: Shape) => {\r\n                                console.log(shape);\r\n                                this.setState({ selectedShape: shape })\r\n                            }}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div style={{ width: \"70%\" }}>\r\n                        <div>\r\n                            <img src={this.state.hatUrl} className=\"smallImg\" />\r\n                        </div>\r\n                        <div>\r\n                            <img src={this.state.shirtUrl} style={{ height: \"120px\" }} />\r\n                        </div>\r\n\r\n                        {this.state.selectedShape && <SelectedShape shape={this.state.selectedShape} />}\r\n\r\n                        <input type=\"text\"\r\n                            value={this.state.favoriteInput}\r\n                            onChange={(e) => this.setState({ favoriteInput: e.target.value })} />\r\n                        <button onClick={() => this.saveFavorite()} >Save</button>\r\n                        <ul>{this.state.favorites.map(x => this.renderFavoriteListItem(x))}</ul>\r\n\r\n                        <button onClick={() => this.setState({ hatUrl: \"\", shirtUrl: \"\", selectedShape: undefined })}>Reset</button>\r\n                        <button onClick={() => window.localStorage.setItem(\"state\", JSON.stringify(this.state))}>Save to LocalStorage</button>\r\n                        <button onClick={() => window.localStorage.clear()}>Clear LocalStorage</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css'\r\nimport ContactList from './ContactList';\r\nimport { ImageDisplay, LotrCharacterDisplay } from './ImageDisplay';\r\nimport { LotrWiki } from './LotrWiki';\r\nimport { PokerComponent } from './CardLibrary/PokerComponent';\r\nimport { ShoppingList } from './ShoppingList';\r\nimport { DressUpGameTryingStuff } from './DressUpGame';\r\nimport { ColorSwitcher } from './ColorSwitcher';\r\n\r\n\r\nexport class App extends React.Component<any, any>{\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AppRoot\">\r\n        <div>\r\n          <DressUpGameTryingStuff />\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//<LotrCharacterDisplay />\r\n//<LotrWiki />\r\n\r\n// JSX\r\n// state\r\n// props\r\n\r\n// <h1></h1> header 1\r\n// <h2></h2> header 2\r\n// <h3></h3> header 3\r\n// <div></div> horizontal divider\r\n// <span></span> style text\r\n// <button></button> button\r\n// <ul><li>test</li></ul> unorderd list with list item inside called \"test\"\r\n// <></>  empty fragment\r\n\r\n// { /* COMMENT */ } \r\n/* \r\n{\r\n  // COMMENT\r\n} \r\n{ false && <CommentedOutComponent /> }\r\n*/","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}