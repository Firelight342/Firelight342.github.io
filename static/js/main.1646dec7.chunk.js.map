{"version":3,"sources":["DressUpGame/ItemTray.tsx","DressUpGame/DressUpGameColorButton.tsx","DressUpGame/DressUpGameButton.tsx","DressUpGame/DUGColorAndImgLists.tsx","DressUpGame/ImgDisplay.tsx","DressUpGame/DressUpGame.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ItemTray","props","state","isTrayOpen","inverse","this","headerClass","useSmallerHeader","className","onClick","setState","trayHeaderTitle","children","React","Component","ColorButtons","color","map","src","ColorButtonsForPermObj","itemName","fillUrl","imgUrl","outlineUrl","secondFillUrl","bgColorUrl","ShapeButtonsWithColor","selectedShape","itemUrls","selectedColor","shapeUrl","onShapeSelect","ShapeButtonsWithoutColor","undefined","bangs","headHair","characterUrls","lipsUrls","noseUrls","browUrls","eyeUrls","eyeLashUrls","fleshColor","lipColor","bigColorOption","SelectedShape","shape","DressUpGameTryingStuff","storedState","window","localStorage","getItem","JSON","parse","favoriteInput","favorites","openedTray","character","lips","nose","brow","eyeColor","eye","favorite","name","console","log","type","value","onChange","e","target","saveFavorite","x","renderFavoriteListItem","setItem","stringify","clear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1646dec7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ItemTray.css'\r\n\r\ninterface ItemTrayProps {\r\n    trayHeaderTitle: string\r\n    useSmallerHeader?: boolean\r\n}\r\ninterface ItemTrayState {\r\n    isTrayOpen: boolean\r\n}\r\nexport class ItemTray extends React.Component<ItemTrayProps, ItemTrayState>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isTrayOpen: false,\r\n        }\r\n    }\r\n    render(): React.ReactNode {\r\n        var inverse = !this.state.isTrayOpen;\r\n\r\n        var headerClass = \"\";\r\n        if (this.props.useSmallerHeader) {\r\n            headerClass = \"smallerHeader\"\r\n\r\n        }\r\n        return (\r\n            <>\r\n                <h1 className={headerClass} onClick={() => this.setState({ isTrayOpen: inverse })}>\r\n                    {this.state.isTrayOpen ? \"-\" : \"+\"}{this.props.trayHeaderTitle}\r\n                </h1>\r\n                {this.state.isTrayOpen &&\r\n                    <>\r\n                        {this.props.children}\r\n                    </>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './DressUpGame.css'\r\nimport './DressUpGameColors.css'\r\nimport { Shape } from './DUGColorAndImgLists';\r\nimport { ItemTray } from './ItemTray';\r\n\r\n\r\ninterface ColorButtonProps {\r\n    onClick: (color: string) => void,\r\n    color: string[]\r\n}\r\n\r\nexport class ColorButtons extends React.Component<ColorButtonProps, {}>{\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <>\r\n\r\n                {this.props.color.map((color: string) => {\r\n                    return (\r\n                        <>\r\n                            <img\r\n                                src={\"./imgTesting/color.png\"}\r\n                                onClick={() => {\r\n                                    this.props.onClick(color)\r\n                                }}\r\n                                className={` ${color} clothesTrayImgColor`}\r\n                            />\r\n                        </>\r\n                    )\r\n                })}\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface ColorButtonPropsO {\r\n    itemName: string\r\n    imgUrl: Shape\r\n    onClick: (shape: Shape) => void,\r\n    color: string[]\r\n\r\n}\r\n\r\nexport class ColorButtonsForPermObj extends React.Component<ColorButtonPropsO, {}>{\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <>\r\n                <ItemTray trayHeaderTitle={this.props.itemName}>\r\n                    {this.props.color.map((color: string) => {\r\n                        return (\r\n                            <>\r\n                                <img\r\n                                    src={\"./imgTesting/color.png\"}\r\n                                    onClick={() => {\r\n                                        this.props.onClick({\r\n                                            fillUrl: this.props.imgUrl.fillUrl,\r\n                                            outlineUrl: this.props.imgUrl.outlineUrl,\r\n                                            secondFillUrl: this.props.imgUrl.secondFillUrl,\r\n                                            bgColorUrl: this.props.imgUrl.bgColorUrl,\r\n                                            color: color\r\n                                        })\r\n                                    }}\r\n                                    className={` ${color} clothesTrayImgColor`}\r\n                                />\r\n                            </>\r\n                        )\r\n                    })}\r\n                </ItemTray>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './DressUpGame.css'\r\nimport './DressUpGameColors.css'\r\nimport { ColorButtons } from './DressUpGameColorButton';\r\nimport { ItemTray } from './ItemTray';\r\nimport { ShapeUrl, Shape } from './DUGColorAndImgLists';\r\n\r\ninterface ShapeButtonProps {\r\n    itemName: string,\r\n    itemUrls: ShapeUrl[],\r\n    onShapeSelect: (shape: Shape) => void,\r\n    color: string[]\r\n}\r\ninterface ShapeButtonState {\r\n    selectedShape: ShapeUrl | undefined\r\n    selectedColor: string\r\n}\r\nexport class ShapeButtonsWithColor extends React.Component<ShapeButtonProps, ShapeButtonState>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            selectedShape: this.props.itemUrls[0],\r\n            selectedColor: \"\"\r\n        }\r\n    }\r\n    render(): React.ReactNode {\r\n        return (\r\n            <>\r\n                <ItemTray trayHeaderTitle={this.props.itemName}>\r\n                    <>\r\n                        {this.props.itemUrls.map((shapeUrl: ShapeUrl) => {\r\n                            return (\r\n                                <img\r\n                                    src={shapeUrl.outlineUrl}\r\n                                    className=\"clothesTrayImg\"\r\n                                    onClick={() => {\r\n                                        this.setState({ selectedShape: shapeUrl });\r\n                                        this.props.onShapeSelect({ ...shapeUrl, color: this.state.selectedColor })\r\n                                    }} />\r\n                            )\r\n                        })}\r\n                        <div></div>\r\n                        <ColorButtons color={this.props.color} onClick={(color) => {\r\n                            this.setState({ selectedColor: color });\r\n                            if (this.state.selectedShape) {\r\n                                this.props.onShapeSelect({ ...this.state.selectedShape, color: color })\r\n                            }\r\n                        }} />\r\n                    </>\r\n                </ItemTray>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ninterface ShapeButtonPropsNC {\r\n    itemName: string,\r\n    itemUrls: ShapeUrl[],\r\n    onShapeSelect: (shape: Shape) => void,\r\n}\r\ninterface ShapeButtonStateNC {\r\n    selectedShape: ShapeUrl | undefined\r\n}\r\nexport class ShapeButtonsWithoutColor extends React.Component<ShapeButtonPropsNC, ShapeButtonStateNC>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            selectedShape: undefined,\r\n        }\r\n    }\r\n    render(): React.ReactNode {\r\n        return (\r\n            <>\r\n                <ItemTray trayHeaderTitle={this.props.itemName}>\r\n                    <>\r\n                        {this.props.itemUrls.map((shapeUrl: ShapeUrl) => {\r\n                            return (\r\n                                <img\r\n                                    src={shapeUrl.outlineUrl}\r\n                                    className=\"clothesTrayImg\"\r\n                                    onClick={() => {\r\n                                        this.setState({ selectedShape: shapeUrl });\r\n                                        this.props.onShapeSelect({ ...shapeUrl, })\r\n                                    }} />\r\n                            )\r\n                        })}\r\n                    </>\r\n                </ItemTray>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n//hat and shirt button setup\r\ninterface ButtonProps {\r\n    itemName: string,\r\n    imgUrls: string[],\r\n    onClick: (imgUrl: string) => void\r\n}\r\ninterface ButtonState {\r\n    isTrayOpen: boolean\r\n}\r\nexport class ClothingButtons extends React.Component<ButtonProps, ButtonState>{\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            isTrayOpen: false\r\n        }\r\n    }\r\n    render(): React.ReactNode {\r\n        var inverse = !this.state.isTrayOpen;\r\n        // boolean ? \"if true\" : \"if false\"\r\n        return (\r\n            <>\r\n                <h1 onClick={() => this.setState({ isTrayOpen: inverse })}>\r\n                    {this.state.isTrayOpen ? \"-\" : \"+\"}{this.props.itemName}</h1>\r\n                {this.state.isTrayOpen && this.props.imgUrls.map((imgUrl: string) => {\r\n                    return (\r\n\r\n                        <img\r\n                            src={imgUrl}\r\n                            className=\"clothesTrayImg\"\r\n                            onClick={() => this.props.onClick(imgUrl)} />\r\n\r\n                    )\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n//what the call looks like\r\n//<ClothingButtons itemName='Hats 5' imgUrls={hatImgs} onClick={(url) => this.setState({ hatUrl: url })} />\r\n","import React from 'react';\r\nimport './DressUpGame.css'\r\nimport './DressUpGameColors.css'\r\n\r\nexport interface ShapeUrl {\r\n    outlineUrl?: string\r\n    fillUrl?: string\r\n    secondFillUrl?: string\r\n    bgColorUrl?: string\r\n}\r\nexport interface Shape extends ShapeUrl {\r\n    color?: string\r\n}\r\n\r\n\r\nexport let bangs: ShapeUrl[] = [\r\n    { outlineUrl: './DUG/bangs/bangOL1.png', fillUrl: \"./DUG/bangs/bangC1.png\" },\r\n    { outlineUrl: './DUG/bangs/bangOL2.png', fillUrl: \"./DUG/bangs/bangC2.png\" },\r\n    { outlineUrl: './DUG/bangs/bangOL3.png', fillUrl: \"./DUG/bangs/bangC3.png\" },\r\n    { outlineUrl: './DUG/bangs/bangOL4.png', fillUrl: \"./DUG/bangs/bangC4.png\" },\r\n    { outlineUrl: './DUG/bangs/bangOL5.png', fillUrl: \"./DUG/bangs/bangC5.png\" },\r\n    { outlineUrl: './DUG/bangs/bangOL6.png', fillUrl: \"./DUG/bangs/bangC6.png\" },\r\n    { outlineUrl: './DUG/bangs/bangOL7.png', fillUrl: \"./DUG/bangs/bangC7.png\" },\r\n    { outlineUrl: './DUG/bangs/bangOL8.png', fillUrl: \"./DUG/bangs/bangC8.png\" },\r\n    { outlineUrl: './DUG/bangs/bangOL9.png', fillUrl: \"./DUG/bangs/bangC9.png\" },\r\n    { outlineUrl: './DUG/bangs/bangOL10.png', fillUrl: \"./DUG/bangs/bangC10.png\" },\r\n    { outlineUrl: \"./DUG/blank.png\", fillUrl: \"\" },\r\n];\r\nexport let headHair: ShapeUrl[] = [\r\n    { outlineUrl: './DUG/headHair/headHairOL1.png', fillUrl: \"./DUG/headHair/headHairC1.png\" },\r\n    { outlineUrl: './DUG/headHair/headHairOL2.png', fillUrl: \"./DUG/headHair/headHairC2.png\" },\r\n    { outlineUrl: './DUG/headHair/headHairOL3.png', fillUrl: \"./DUG/headHair/headHairC3.png\" },\r\n    { outlineUrl: './DUG/headHair/headHairOL4.png', fillUrl: \"./DUG/headHair/headHairC4.png\" },\r\n    { outlineUrl: \"./DUG/blank.png\", fillUrl: \"\" },\r\n];\r\n\r\nexport let characterUrls: Shape =\r\n    { outlineUrl: './DUG/girl/girlOutline.png', fillUrl: \"./DUG/girl/girlColor.png\", color: \"grey\" };\r\n\r\nexport let lipsUrls: ShapeUrl[] = [\r\n    { outlineUrl: './DUG/lips/lipsOL1.png', fillUrl: \"./DUG/lips/lipsC1.png\" },\r\n    { outlineUrl: './DUG/lips/lipsOL2.png', fillUrl: \"./DUG/lips/lipsC2.png\" },\r\n    { outlineUrl: './DUG/lips/lipsOL3.png', fillUrl: \"./DUG/lips/lipsC3.png\" },\r\n    { outlineUrl: './DUG/lips/lipsOL4.png', fillUrl: \"./DUG/lips/lipsC4.png\" },\r\n    { outlineUrl: './DUG/lips/lipsOL5.png', fillUrl: \"./DUG/lips/lipsC5.png\" },\r\n    { outlineUrl: './DUG/lips/lipsOL6.png', fillUrl: \"./DUG/lips/lipsC6.png\" },\r\n];\r\n\r\nexport let noseUrls: ShapeUrl[] = [\r\n    { outlineUrl: './DUG/noses/nose1.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/noses/nose2.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/noses/nose3.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/noses/nose4.png', fillUrl: \"\" },\r\n];\r\n\r\nexport let browUrls: ShapeUrl[] = [\r\n    { outlineUrl: './DUG/brows/browOL1.png', fillUrl: \"./DUG/brows/browC1.png\" },\r\n    { outlineUrl: './DUG/brows/browOL2.png', fillUrl: \"./DUG/brows/browC2.png\" },\r\n    { outlineUrl: './DUG/brows/browOL3.png', fillUrl: \"./DUG/brows/browC3.png\" },\r\n    { outlineUrl: './DUG/brows/browOL4.png', fillUrl: \"./DUG/brows/browC4.png\" },\r\n    { outlineUrl: './DUG/brows/browOL5.png', fillUrl: \"./DUG/brows/browC5.png\" },\r\n];\r\n\r\nexport let eyeUrls: Shape =\r\n{\r\n    outlineUrl: './DUG/eyes/eye.png',\r\n    fillUrl: './DUG/eyes/eyeIris1.png',\r\n    secondFillUrl: './DUG/eyes/eyeIris2.png',\r\n    bgColorUrl: \"./DUG/eyes/eyeWhites.png\"\r\n};\r\n\r\nexport let eyeLashUrls: ShapeUrl[] = [\r\n    { outlineUrl: './DUG/eyes/eyeLash1.png', bgColorUrl: './DUG/eyes/eye.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/eyes/eyeLash2.png', bgColorUrl: './DUG/eyes/eye.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/eyes/eyeLash3.png', bgColorUrl: './DUG/eyes/eye.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/eyes/eyeLash4.png', bgColorUrl: './DUG/eyes/eye.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/eyes/eyeLash5.png', bgColorUrl: './DUG/eyes/eye.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/eyes/eyeLash6.png', bgColorUrl: './DUG/eyes/eye.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/eyes/eyeLash7.png', bgColorUrl: './DUG/eyes/eye.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/eyes/eyeLash8.png', bgColorUrl: './DUG/eyes/eye.png', fillUrl: \"\" },\r\n    { outlineUrl: './DUG/eyes/eye.png', fillUrl: \"\" },\r\n\r\n];\r\n\r\n\r\nexport const fleshColor: string[] = [\r\n    \"skin1\",\r\n    \"skin2\",\r\n    \"skin3\",\r\n    \"skin5\",\r\n    \"skin4\",\r\n    \"skin6\",\r\n    \"skin7\",\r\n    \"skin8\",\r\n    \"skin9\",\r\n    \"skin10\"\r\n]\r\n\r\nexport const lipColor: string[] = [\r\n    \"lip1\",\r\n    \"lip2\",\r\n    \"lip3\",\r\n    \"lip4\",\r\n    \"lip5\",\r\n    \"lip6\",\r\n    \"lip7\",\r\n    \"lip8\"\r\n]\r\n\r\nexport const bigColorOption: string[] = [\r\n    \"color1\",\r\n    \"color2\",\r\n    \"color3\",\r\n    \"color4\",\r\n    \"color5\",\r\n    \"color6\",\r\n    \"color7\",\r\n    \"color8\",\r\n    \"color9\",\r\n    \"color10\",\r\n    \"color11\",\r\n    \"color12\",\r\n    \"color13\",\r\n    \"color14\",\r\n    \"color15\",\r\n    \"color16\",\r\n    \"color17\",\r\n    \"color18\",\r\n    \"color19\",\r\n    \"color20\",\r\n    \"color21\",\r\n    \"color22\",\r\n    \"color23\",\r\n    \"color24\",\r\n    \"color25\",\r\n    \"color26\",\r\n    \"color27\",\r\n    \"color28\",\r\n    \"color29\",\r\n    \"color30\",\r\n    \"color31\",\r\n    \"color32\",\r\n    \"color33\",\r\n    \"color34\",\r\n    \"color35\",\r\n    \"color36\",\r\n    \"color37\",\r\n    \"color38\",\r\n    \"color39\",\r\n    \"color40\",\r\n    \"color41\",\r\n    \"color42\",\r\n    \"color43\",\r\n    \"color44\",\r\n    \"color45\",\r\n    \"color46\",\r\n    \"color47\",\r\n    \"color48\",\r\n    \"color49\",\r\n    \"color50\",\r\n    \"color51\",\r\n    \"color52\",\r\n    \"color53\",\r\n    \"color54\",\r\n]\r\n\r\n","import React from 'react';\r\nimport './DressUpGame.css'\r\nimport './DressUpGameColors.css'\r\nimport { Shape } from './DUGColorAndImgLists';\r\n\r\nexport class SelectedShape extends React.Component<{ shape: Shape }, {}> {\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n\r\n            <div>\r\n                <img src={this.props.shape.bgColorUrl} className=\"body \" />\r\n                <img src={this.props.shape.fillUrl} className={this.props.shape.color + \" body\"} />\r\n                <img src={this.props.shape.secondFillUrl} className={this.props.shape.color + \" body\"} />\r\n                <img src={this.props.shape.outlineUrl} className=\"body \" />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './DressUpGame.css'\r\nimport './DressUpGameColors.css'\r\nimport { ShapeButtonsWithColor, ShapeButtonsWithoutColor } from './DressUpGameButton';\r\nimport { bangs, bigColorOption, browUrls, characterUrls, eyeLashUrls, eyeUrls, fleshColor, headHair, lipColor, lipsUrls, noseUrls, Shape } from './DUGColorAndImgLists';\r\nimport { SelectedShape } from './ImgDisplay';\r\nimport { ColorButtonsForPermObj } from './DressUpGameColorButton';\r\n\r\n\r\nexport interface Favorite {\r\n    name: string\r\n    character?: Shape\r\n    lips?: Shape\r\n    nose?: Shape\r\n    brow?: Shape\r\n    eye?: Shape\r\n    eyeColor?: Shape\r\n}\r\n\r\nexport interface DU1State {\r\n    favoriteInput: string\r\n    favorites: Favorite[]\r\n\r\n    openedTray: number\r\n\r\n    character: Shape | undefined\r\n    lips: Shape | undefined\r\n    nose: Shape | undefined\r\n    brow: Shape | undefined\r\n    eyeColor: Shape | undefined\r\n    eye: Shape | undefined\r\n\r\n    headHair: Shape | undefined\r\n    bangs: Shape | undefined\r\n}\r\n\r\nexport class DressUpGameTryingStuff extends React.Component<any, DU1State> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        var storedState = window.localStorage.getItem(\"state\");\r\n        if (storedState) {\r\n            this.state = JSON.parse(storedState);\r\n        } else {\r\n            this.state = {\r\n                favoriteInput: \"\",\r\n                favorites: [],\r\n\r\n                openedTray: 0,\r\n\r\n                character: characterUrls,\r\n                lips: lipsUrls[0],\r\n                nose: noseUrls[0],\r\n                brow: browUrls[0],\r\n                eyeColor: undefined,\r\n                eye: eyeLashUrls[8],\r\n\r\n                headHair: undefined,\r\n                bangs: undefined,\r\n            }\r\n        }\r\n    }\r\n\r\n    renderFavoriteListItem(favorite: Favorite): React.ReactNode {\r\n        return (\r\n            <li onClick={() => this.setState({\r\n                character: favorite.character,\r\n                lips: favorite.lips,\r\n                nose: favorite.nose,\r\n                brow: favorite.brow,\r\n                eye: favorite.eye,\r\n                eyeColor: favorite.eyeColor\r\n            })}>\r\n                {favorite.name}\r\n            </li>);\r\n    }\r\n\r\n    saveFavorite(): void {\r\n        this.setState({\r\n            favoriteInput: \"\",\r\n            favorites: [...this.state.favorites,\r\n            {\r\n                name: this.state.favoriteInput,\r\n                character: this.state.character,\r\n                lips: this.state.lips,\r\n                nose: this.state.nose,\r\n                brow: this.state.brow,\r\n                eye: this.state.eye,\r\n                eyeColor: this.state.eyeColor\r\n            }]\r\n        })\r\n    }\r\n\r\n\r\n    render(): React.ReactNode {\r\n        console.log(this.state)\r\n        return (\r\n            <>\r\n                <div>\r\n\r\n\r\n                    {/* ART */}\r\n                    <div >\r\n                        {this.state.character && <SelectedShape shape={this.state.character} />}\r\n                        {this.state.lips && <SelectedShape shape={this.state.lips} />}\r\n                        {this.state.nose && <SelectedShape shape={this.state.nose} />}\r\n                        {this.state.brow && <SelectedShape shape={this.state.brow} />}\r\n                        {this.state.eyeColor && <SelectedShape shape={this.state.eyeColor} />}\r\n                        {this.state.eye && <SelectedShape shape={this.state.eye} />}\r\n\r\n                        {this.state.headHair && <SelectedShape shape={this.state.headHair} />}\r\n                        {this.state.bangs && <SelectedShape shape={this.state.bangs} />}\r\n\r\n\r\n                    </div>\r\n                    {/* Tray 1*/}\r\n                    {this.state.openedTray === 0 &&\r\n                        <div className=\"tray\">\r\n                            <ColorButtonsForPermObj\r\n                                itemName='Character'\r\n                                imgUrl={characterUrls}\r\n                                onClick={(shape: Shape) => {\r\n                                    console.log(shape);\r\n                                    this.setState({ character: shape })\r\n                                }}\r\n                                color={fleshColor}\r\n                            />\r\n                            <ShapeButtonsWithColor\r\n                                itemName='Brows'\r\n                                itemUrls={browUrls}\r\n                                onShapeSelect={(shape: Shape) => {\r\n                                    console.log(shape);\r\n                                    this.setState({ brow: shape })\r\n                                }}\r\n                                color={bigColorOption}\r\n                            />\r\n                            <ShapeButtonsWithoutColor\r\n                                itemName='Eye'\r\n                                itemUrls={eyeLashUrls}\r\n                                onShapeSelect={(shape: Shape) => {\r\n                                    console.log(shape);\r\n                                    this.setState({ eye: shape })\r\n                                }}\r\n                            />\r\n                            <ColorButtonsForPermObj\r\n                                itemName='Eyes Color'\r\n                                imgUrl={eyeUrls}\r\n                                onClick={(shape: Shape) => {\r\n                                    console.log(shape);\r\n                                    this.setState({ eyeColor: shape })\r\n                                }}\r\n                                color={bigColorOption}\r\n                            />\r\n                            <ShapeButtonsWithoutColor\r\n                                itemName='Nose'\r\n                                itemUrls={noseUrls}\r\n                                onShapeSelect={(shape: Shape) => {\r\n                                    console.log(shape);\r\n                                    this.setState({ nose: shape })\r\n                                }}\r\n                            />\r\n                            <ShapeButtonsWithColor\r\n                                itemName='Lips'\r\n                                itemUrls={lipsUrls}\r\n                                onShapeSelect={(shape: Shape) => {\r\n                                    console.log(shape);\r\n                                    this.setState({ lips: shape })\r\n                                }}\r\n                                color={lipColor}\r\n                            />\r\n\r\n\r\n                        </div>}\r\n\r\n                    {/* Tray 2*/}\r\n                    {this.state.openedTray === 1 &&\r\n                        <div className=\"tray\">\r\n                            <ShapeButtonsWithColor\r\n                                itemName='Head Hair'\r\n                                itemUrls={headHair}\r\n                                onShapeSelect={(shape: Shape) => {\r\n                                    console.log(shape);\r\n                                    this.setState({ headHair: shape })\r\n                                }}\r\n                                color={bigColorOption}\r\n                            />\r\n                            <ShapeButtonsWithColor\r\n                                itemName='Bangs'\r\n                                itemUrls={bangs}\r\n                                onShapeSelect={(shape: Shape) => {\r\n                                    console.log(shape);\r\n                                    this.setState({ bangs: shape })\r\n                                }}\r\n                                color={bigColorOption}\r\n                            />\r\n\r\n\r\n\r\n\r\n                        </div>}\r\n                    {/*go to Panel*/}\r\n                    <span className='traySelector'>\r\n                        <button onClick={() => this.setState({ openedTray: 0 })}>Body</button>\r\n                        <button onClick={() => this.setState({ openedTray: 1 })}>Hair</button>\r\n                    </span>\r\n                    {/* Input and Save */}\r\n                    <span className=\"input\">\r\n                        <input type=\"text\"\r\n                            value={this.state.favoriteInput}\r\n                            onChange={(e) => this.setState({ favoriteInput: e.target.value })} />\r\n                        <button onClick={() => this.saveFavorite()} >Save</button>\r\n                        <ul>{this.state.favorites.map(x => this.renderFavoriteListItem(x))}</ul>\r\n\r\n                        <button onClick={() => this.setState({\r\n                            character: characterUrls,\r\n                            lips: lipsUrls[0],\r\n                            nose: noseUrls[0],\r\n                            brow: browUrls[0],\r\n                            eyeColor: { color: \"grey\" },\r\n                            eye: eyeLashUrls[8],\r\n                        })}>Reset</button>\r\n\r\n                        <button onClick={() => window.localStorage.setItem(\"state\", JSON.stringify(this.state))}>Save to LocalStorage</button>\r\n                        <button onClick={() => window.localStorage.clear()}>Clear LocalStorage</button>\r\n                    </span>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css'\r\nimport ContactList from './ContactList';\r\nimport { ImageDisplay, LotrCharacterDisplay } from './ImageDisplay';\r\nimport { LotrWiki } from './LotrWiki';\r\nimport { PokerComponent } from './CardLibrary/PokerComponent';\r\nimport { ShoppingList } from './ShoppingList';\r\nimport { ColorSwitcher } from './ColorSwitcher';\r\nimport { DressUpGameTryingStuff } from './DressUpGame/DressUpGame';\r\n\r\n\r\nexport class App extends React.Component<any, any>{\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AppRoot\">\r\n        <div>\r\n          <DressUpGameTryingStuff />\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//<LotrCharacterDisplay />\r\n//<LotrWiki />\r\n\r\n// JSX\r\n// state\r\n// props\r\n\r\n// <h1></h1> header 1\r\n// <h2></h2> header 2\r\n// <h3></h3> header 3\r\n// <div></div> horizontal divider\r\n// <span></span> style text\r\n// <button></button> button\r\n// <ul><li>test</li></ul> unorderd list with list item inside called \"test\"\r\n// <></>  empty fragment\r\n\r\n// { /* COMMENT */ } \r\n/* \r\n{\r\n  // COMMENT\r\n} \r\n{ false && <CommentedOutComponent /> }\r\n*/","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}